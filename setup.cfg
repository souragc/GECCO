[metadata]
name = gecco-tool
version = file: gecco/_version.txt
author = Martin Larralde
author-email = martin.larralde@embl.de
home-page = https://github.com/zellerlab/GECCO
description = Gene cluster prediction with Conditional random fields.
long-description = file: README.md
long_description_content_type = text/markdown
license = GPLv3
platform = x86, x86_64, powerpc, ppc64
classifiers =
  Development Status :: 3 - Alpha
  Intended Audience :: Science/Research
  License :: OSI Approved :: GNU General Public License v3 (GPLv3)
  Operating System :: POSIX
  Programming Language :: Python :: 3 :: Only
  Programming Language :: Python :: 3.6
  Programming Language :: Python :: 3.7
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9
  Topic :: Scientific/Engineering :: Bio-Informatics
  Topic :: Scientific/Engineering :: Medical Science Apps.
  Typing :: Typed
project_urls =
  Documentation = https://gecco.embl.de/
  Bug Tracker = https://github.com/zellerlab/GECCO/issues
  Changelog = https://github.com/zellerlab/GECCO/blob/master/CHANGELOG.md
  Coverage = https://codecov.io/gh/zellerlab/GECCO/
  Builds = https://git.embl.de/grp-zeller/GECCO/-/pipelines

[options]
zip_safe = false
packages = find:
include_package_data = true
python_requires = >= 3.6
setup_requires =
  setuptools >=39.2
  tqdm ~=4.41
  pyhmmer ~=0.3.0
  wheel >=0.30
install_requires =
  biopython ~=1.78
  dataclasses ~=0.8             ; python_version < '3.7'
  docopt ~=0.6.2
  numpy ~=1.16,<1.20            ; python_version < '3.7'
  numpy ~=1.16                  ; python_version >= '3.7'
  psutil ~=5.8
  pyhmmer ~=0.3.0
  pyrodigal ~=0.4.2
  rich >=9.0.0
  scikit-learn ~=0.24.0
  scipy ~=1.4
  sklearn-crfsuite ~=0.3.6

[options.extras_require]
train =
  fisher ~=0.1.9
  pandas ~=1.0
  statsmodels ~=0.12.1

[options.packages.find]
include =
  gecco
  gecco.cli
  gecco.cli.commands
  gecco.crf
  gecco.hmmer
  gecco.interpro
  gecco.types

[options.package_data]
gecco = _version.txt, py.typed

[options.entry_points]
gecco.cli.commands =
  annotate = gecco.cli.commands.annotate:Annotate
  cv = gecco.cli.commands.cv:Cv                    [train]
  embed = gecco.cli.commands.embed:Embed           [train]
  run = gecco.cli.commands.run:Run
  train = gecco.cli.commands.train:Train           [train]
  help = gecco.cli.commands.help:Help
console-scripts =
  gecco = gecco.cli:main

[bdist_wheel]
universal = true

[coverage:report]
include = gecco/*
show_missing = true
exclude_lines =
  pragma: no cover
  if typing.TYPE_CHECKING:
  @abc.abstractmethod
  @abc.abstractproperty
  raise NotImplementedError
  return NotImplemented

[green]
file-pattern = test_*.py
verbose = 2
no-skip-report = true
quiet-stdout = true
run-coverage = true

[pydocstyle]
match-dir = (?!tests)(?!resources)(?!docs)[^\.].*
match = (?!test)(?!setup)[^\._].*\.py
inherit = false
ignore = D200, D203, D213, D402, D406, D407   # Google conventions

[flake8]
max-line-length = 99
doctests = True
ignore = D200, D203, D213, D406, D407, Q000  # Google conventions
exclude =
  .git
  .eggs
  ci/
  scripts/
  notebook/
  tests/
  docs/
  */build/
  */setup.py

[mypy]
disallow_any_decorated = true
disallow_any_generics = true
disallow_any_unimported = false
disallow_subclassing_any = false
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_return_any = true
